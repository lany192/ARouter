buildscript {
    dependencies {
        classpath 'com.github.lany192.app-router:arouter-gradle-plugin:1.5.1'
    }
}

plugins {
    id 'com.android.application' version '7.4.2' apply false
    id 'com.android.library' version '7.4.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.0' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.8.0' apply false
    id 'org.jetbrains.kotlin.kapt' version '1.8.0' apply false
}

allprojects {
    //配置说明 https://juejin.cn/post/6908232077200588814
    configurations.all { Configuration c ->
        // 所有的依赖降级策略
        c.resolutionStrategy {
            dependencySubstitution {
                all { DependencySubstitution dependency ->
                    if (dependency.requested instanceof ModuleComponentSelector) {
                        // 如果发现项目内存在 group +name 等于远端的group+name  那么直接采用本地工程进行编译
                        def p = rootProject.allprojects.find { p -> p.group == dependency.requested.group && p.name == dependency.requested.module }
                        if (p != null) {
                            dependency.useTarget(project(p.path), 'selected local project')
                        }
                    }
                }
            }
        }
    }
    afterEvaluate {
        if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {
            def android = project.extensions.getByName('android')
            android.compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            android.kotlinOptions {
                jvmTarget = "1.8"
            }
        }
    }
}